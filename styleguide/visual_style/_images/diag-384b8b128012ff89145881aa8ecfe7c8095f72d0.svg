<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="114px" preserveAspectRatio="none" style="width:795px;height:114px;background:#FFFFFF;" version="1.1" viewBox="0 0 795 114" width="795px" zoomAndPan="magnify"><defs/><g><rect fill="none" height="112.3984" style="stroke:#FFFFFF;stroke-width:1.0;" width="793" x="0" y="0"/><line style="stroke:#1168BD;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="62" x2="62" y1="54.2656" y2="107.3984"/><line style="stroke:#1168BD;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="190" x2="190" y1="54.2656" y2="107.3984"/><line style="stroke:#1168BD;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="318" x2="318" y1="54.2656" y2="107.3984"/><line style="stroke:#E18114;stroke-width:1.5;stroke-dasharray:5.0,5.0;" x1="460" x2="460" y1="54.2656" y2="107.3984"/><line style="stroke:#1168BD;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="605" x2="605" y1="54.2656" y2="107.3984"/><line style="stroke:#1168BD;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="732" x2="732" y1="54.2656" y2="107.3984"/><rect fill="#08427B" height="48.2656" rx="2.5" ry="2.5" style="stroke:#FFFFFF;stroke-width:0.5;" width="114" x="5" y="5"/><text fill="#FFFFFF" font-family="Roboto" font-size="13" font-style="italic" lengthAdjust="spacing" textLength="60" x="32" y="26.0669">«node 1»</text><text fill="#FFFFFF" font-family="Roboto" font-size="13" lengthAdjust="spacing" textLength="85" x="19.5" y="41.1997">Primary node</text><rect fill="#08427B" height="48.2656" rx="2.5" ry="2.5" style="stroke:#FFFFFF;stroke-width:0.5;" width="122" x="129" y="5"/><text fill="#FFFFFF" font-family="Roboto" font-size="13" font-style="italic" lengthAdjust="spacing" textLength="60" x="160" y="26.0669">«node 2»</text><text fill="#FFFFFF" font-family="Roboto" font-size="13" lengthAdjust="spacing" textLength="104" x="138" y="41.1997">Secondary node</text><rect fill="#E18114" height="48.2656" rx="2.5" ry="2.5" style="stroke:#E18114;stroke-width:0.5;" width="114" x="261" y="5"/><text fill="#FFFFFF" font-family="Roboto" font-size="13" font-style="italic" lengthAdjust="spacing" textLength="45" x="295.5" y="26.0669">«logic»</text><text fill="#FFFFFF" font-family="Roboto" font-size="13" lengthAdjust="spacing" textLength="90" x="273" y="41.1997">Logic element</text><rect fill="#A0439C" height="48.2656" rx="2.5" ry="2.5" style="stroke:#A0439C;stroke-width:1.5;" width="151" x="385" y="5"/><text fill="#FFFFFF" font-family="Roboto" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="60" x="430.5" y="26.0669">«group»</text><text fill="#FFFFFF" font-family="Roboto" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="133" x="394" y="41.1997">Grouping element</text><rect fill="#41AF46" height="48.2656" rx="2.5" ry="2.5" style="stroke:#41AF46;stroke-width:0.5;" width="119" x="546" y="5"/><text fill="#FFFFFF" font-family="Roboto" font-size="13" font-style="italic" lengthAdjust="spacing" textLength="59" x="576" y="26.0669">«divider»</text><text fill="#FFFFFF" font-family="Roboto" font-size="13" lengthAdjust="spacing" textLength="101" x="555" y="41.1997">Divider element</text><rect fill="#999999" height="48.2656" rx="2.5" ry="2.5" style="stroke:#FFFFFF;stroke-width:0.5;" width="114" x="675" y="5"/><text fill="#FFFFFF" font-family="Roboto" font-size="13" font-style="italic" lengthAdjust="spacing" textLength="45" x="709.5" y="26.0669">«note»</text><text fill="#FFFFFF" font-family="Roboto" font-size="13" lengthAdjust="spacing" textLength="31" x="716.5" y="41.1997">Note</text><polygon fill="#E91E63" points="720,85.3984,730,89.3984,720,93.3984,724,89.3984" style="stroke:#E91E63;stroke-width:1.0;"/><line style="stroke:#E91E63;stroke-width:1.0;" x1="62" x2="726" y1="89.3984" y2="89.3984"/><text fill="#E91E63" font-family="Roboto" font-size="13" lengthAdjust="spacing" textLength="129" x="332.5" y="82.3325">messages and flows</text><!--MD5=[7d15596dcc2fcc7734ddde3caaf460c4]
@startuml
' Styling settings for PlantUML diagrams
' See http://plantuml.sourceforge.net for documentation
' To get a list of possible skinparam settings, run: plantuml -language

' COLORS
' ========================================

' general colors from own stylesheet
!$diagram_background_color = "#fff"
!$diagram_border_color = "#fff"
!$diagram_color = "#808080"
!$arrow_color = "#e91e63"
!$link_color = "#3498DB"

' make admonition colors available for elements
!$caution_color = "#a0439c"
!$caution_on_color = "#fff"
!$important_color = "#d32f2f"
!$important_on_color = "#fff"
!$note_color = "#217ee7"
!$note_on_color = "#fff"
!$tip_color = "#41af46"
!$tip_on_color = "#fff"
!$warning_color = "#e18114"
!$warning_on_color = "#fff"

' node_1, node_2 and note taken from C4 styling
!$node_1_main_color = "#08427b"
!$node_2_main_color = "#1168bd"
!$node_2_aux2_color = "#3498DB"
!$note_main_color = "#999"

' use admonition colors for other elements
!$logic_main_color = $warning_color
!$group_main_color = $caution_color
!$divider_main_color = $tip_color

!procedure $logic_style($var=1)
  $styling($var, $logic_main_color, $logic_main_color, $warning_on_color) 
!endprocedure

!procedure $group_style($var=4)
  $styling($var, $group_main_color, $group_main_color, $caution_on_color, "#FFFCFF") 
!endprocedure

!procedure $divider_style($var=1)
  $styling($var, $divider_main_color, $divider_main_color, $tip_on_color) 
!endprocedure

!procedure $node_1_style($var=1)
  $styling($var, $node_1_main_color, "#fff", "fff") 
!endprocedure

!procedure $node_2_style($var=1)
  $styling($var, $node_2_main_color, "#fff", "fff", $node_2_aux2_color) 
!endprocedure

!procedure $note_1_style($var=1)
  $styling($var, $note_main_color, "#fff", "fff") 
!endprocedure

' STYLE HELPERS
' ========================================

' get variation with color palette:
' $main: primary fill color, typically background
' $aux1, $aux2: add'l fill colors, typically border, alternative background
' $on1, $on2: text colors, typically main text, supplementary
' variations:
' 1) regular (default)
' 2) name reversed (label outside)
' 3) reverse background
' 4) light background
' 5) border box (loop, alt)
' 6) ...

!procedure $styling($var=1, $main, $aux1, $on1, $aux2="#ccc", $on2="#666")
  !if ($var=="2")
    BackgroundColor $main
    BorderColor $aux1
    FontColor $main
    StereotypeFontColor $main
  !elseif ($var=="3")
    BackgroundColor $aux1
    BorderColor $main
    FontColor $main
    StereotypeFontColor $main
  !elseif ($var==4)
    BackgroundColor $aux2
    BorderColor $aux1
    FontColor $main
  !elseif ($var=="5")
    BackgroundColor $main
    BorderColor $aux1
    FontColor $main
    HeaderFontColor $on1
  !elseif ($var=="6")
    BackgroundColor $on1
    BorderColor $aux1
    FontColor $main
    HeaderFontColor $on1
    HeaderBackgroundColor $aux1
  !elseif ($var==7)
    BackgroundColor $aux2
    BorderColor $main
    FontColor $main
  !else
    BackgroundColor $main
    BorderColor $aux1
    FontColor $on1
    StereotypeFontColor $on1
    HeaderBackgroundColor $on1
  !endif
  FontSize 13
!endprocedure

' GENERAL SETTINGS
' ========================================

!$body_font_family = "Roboto"
' each element can get its own FontName, FontSize, FontStyle; not added now

skinparam BackgroundColor $diagram_background_color
skinparam DiagramBorderColor $diagram_border_color
skinparam HyperlinkColor $link_color

'skinparam monochrome true
skinparam shadowing false
skinparam Handwritten false
skinparam Padding 2
'skinparam Roundcorner 5

' Setting a minimum width can make sequence diagram participants look more balanced
skinparam minClassWidth 100

skinparam Default {
  FontColor $doc_font_color
  FontName $body_font_family
  FontStyle normal
  TextAlignment center
}

skinparam Arrow {
  Color $arrow_color
  FontColor $arrow_color
}

skinparam Note {
  $note_1_style()
}

' USE CASE
' ========================================

skinparam Actor {
  $node_1_style(2)
  ' Make actors look like in C4
  Style awesome
}

skinparam Usecase {
  $node_2_style()
}

skinparam Package {
  $group_style()
}

' ACTIVITY
' ========================================

skinparam Activity {
  $node_2_style()

  StartColor $node_1_main_color
  EndColor $node_1_main_color
  BarColor $logic_main_color
}

skinparam ActivityDiamond {
  $logic_style()
}

skinparam Partition {
  $group_style()
}

skinparam Swimlane {
  $divider_style()
}

skinparam SwimlaneTitle {
  $divider_style(6)
}

' SEQUENCE
' ========================================

'Actor: see Use Case diagram above

skinparam Participant {
  $node_1_style()
'  Padding 40
}

skinparam Boundary {
  $node_1_style(3)
}

skinparam Control {
  $node_1_style(3)
}

skinparam Entity {
  $node_1_style(3)
}

skinparam Database {
  $node_1_style(2)
}

skinparam Collections {
  $node_1_style()
}

skinparam Queue {
  $node_1_style()
}

skinparam SequenceLifeline {
  $node_2_style(7)
}

skinparam SequenceDelay {
  $divider_style(2)
}

skinparam SequenceDivider {
  $divider_style()
}

skinparam SequenceGroup {
  $logic_style(5)
}

skinparam SequenceReference {
  $group_style(6)
  BorderThickness 1
}

skinparam SequenceBox {
  $group_style(4)
'  Padding 13
}

' ========================================
' ========================================


' DEPLOYMENT
' ========================================

' Actor: see Use case diagram
' Use case: see Use case diagram
' Package: see Use case diagram (fix?)
' Boundary: see Sequence diagram
' Control: see Sequence diagram
' Entity: see Sequence diagram
' Queue: see Sequence diagram

' Database: see Sequence diagram (fix?)
' Collections: see Sequence diagram (fix?)

skinparam Agent {
  $node_2_style()
}

skinparam Person {
  $node_1_style()
}

skinparam Artifact {
  $node_2_style()
}

skinparam Component {
  $node_2_style()
}

skinparam File {
  $node_2_style()
}

skinparam Card {
  $node_2_style()
}

skinparam Storage {
  $node_2_style()
}

skinparam Cloud {
  $group_style(4)
}

skinparam Frame {
  $group_style()
}

skinparam Node {
  $group_style()
}

' check lighter background
skinparam Stack {
  $node_2_style()
}

' artefact or group?
skinparam Folder {
  $group_style()
}

skinparam Hexagon {
  $logic_style()
}

skinparam Interface {
  $logic_style(3)
}

skinparam Object {
  $node_2_style()
'  AttributeFontColor $arrow_color
'  EndColor $arrow_color
'  StartColor $arrow_color
}

skinparam Rectangle {
  $logic_style()
}

' Used in C4 models:
skinparam Rectangle<<boundary>> {
  $logic_style(6)
}

skinparam State {
  $node_2_style()
'  AttributeFontColor $arrow_color
'  EndColor $arrow_color
'  StartColor $arrow_color
}

skinparam participant<<node_1>> {
  $node_1_style(1)
}
skinparam participant<<node_2>> {
  $node_2_style(1)
}
skinparam participant<<logic>> {
  $logic_style(1)
}
skinparam participant<<group>> {
  $group_style(1)
}
skinparam participant<<divider>> {
  $divider_style(1)
}
skinparam participant<<note>> {
  $note_1_style(1)
}

hide footbox

participant "Primary node" <<node 1>>
participant "Secondary node" <<node 2>>
participant "Logic element" <<logic>>
participant "Grouping element" <<group>>
participant "Divider element" <<divider>>
participant "Note" <<note>>

"Primary node" -> "Note" : messages and flows
@enduml

@startuml

















skinparam BackgroundColor #fff
skinparam DiagramBorderColor #fff
skinparam HyperlinkColor #3498DB

skinparam shadowing false
skinparam Handwritten false
skinparam Padding 2

skinparam minClassWidth 100

skinparam Default {
  FontColor $doc_font_color
  FontName Roboto
  FontStyle normal
  TextAlignment center
}

skinparam Arrow {
  Color #e91e63
  FontColor #e91e63
}

skinparam Note {
      BackgroundColor #999
    BorderColor #fff
    FontColor fff
    StereotypeFontColor fff
    HeaderBackgroundColor fff
  FontSize 13 
}


skinparam Actor {
      BackgroundColor #08427b
    BorderColor #fff
    FontColor #08427b
    StereotypeFontColor #08427b
  FontSize 13 
  Style awesome
}

skinparam Usecase {
      BackgroundColor #1168bd
    BorderColor #fff
    FontColor fff
    StereotypeFontColor fff
    HeaderBackgroundColor fff
  FontSize 13 
}

skinparam Package {
      BackgroundColor #FFFCFF
    BorderColor #a0439c
    FontColor #a0439c
  FontSize 13 
}


skinparam Activity {
      BackgroundColor #1168bd
    BorderColor #fff
    FontColor fff
    StereotypeFontColor fff
    HeaderBackgroundColor fff
  FontSize 13 

  StartColor #08427b
  EndColor #08427b
  BarColor #e18114
}

skinparam ActivityDiamond {
      BackgroundColor #e18114
    BorderColor #e18114
    FontColor #fff
    StereotypeFontColor #fff
    HeaderBackgroundColor #fff
  FontSize 13 
}

skinparam Partition {
      BackgroundColor #FFFCFF
    BorderColor #a0439c
    FontColor #a0439c
  FontSize 13 
}

skinparam Swimlane {
      BackgroundColor #41af46
    BorderColor #41af46
    FontColor #fff
    StereotypeFontColor #fff
    HeaderBackgroundColor #fff
  FontSize 13 
}

skinparam SwimlaneTitle {
      BackgroundColor #fff
    BorderColor #41af46
    FontColor #41af46
    HeaderFontColor #fff
    HeaderBackgroundColor #41af46
  FontSize 13 
}



skinparam Participant {
      BackgroundColor #08427b
    BorderColor #fff
    FontColor fff
    StereotypeFontColor fff
    HeaderBackgroundColor fff
  FontSize 13 
}

skinparam Boundary {
      BackgroundColor #fff
    BorderColor #08427b
    FontColor #08427b
    StereotypeFontColor #08427b
  FontSize 13 
}

skinparam Control {
      BackgroundColor #fff
    BorderColor #08427b
    FontColor #08427b
    StereotypeFontColor #08427b
  FontSize 13 
}

skinparam Entity {
      BackgroundColor #fff
    BorderColor #08427b
    FontColor #08427b
    StereotypeFontColor #08427b
  FontSize 13 
}

skinparam Database {
      BackgroundColor #08427b
    BorderColor #fff
    FontColor #08427b
    StereotypeFontColor #08427b
  FontSize 13 
}

skinparam Collections {
      BackgroundColor #08427b
    BorderColor #fff
    FontColor fff
    StereotypeFontColor fff
    HeaderBackgroundColor fff
  FontSize 13 
}

skinparam Queue {
      BackgroundColor #08427b
    BorderColor #fff
    FontColor fff
    StereotypeFontColor fff
    HeaderBackgroundColor fff
  FontSize 13 
}

skinparam SequenceLifeline {
      BackgroundColor #3498DB
    BorderColor #1168bd
    FontColor #1168bd
  FontSize 13 
}

skinparam SequenceDelay {
      BackgroundColor #41af46
    BorderColor #41af46
    FontColor #41af46
    StereotypeFontColor #41af46
  FontSize 13 
}

skinparam SequenceDivider {
      BackgroundColor #41af46
    BorderColor #41af46
    FontColor #fff
    StereotypeFontColor #fff
    HeaderBackgroundColor #fff
  FontSize 13 
}

skinparam SequenceGroup {
      BackgroundColor #e18114
    BorderColor #e18114
    FontColor #e18114
    HeaderFontColor #fff
  FontSize 13 
}

skinparam SequenceReference {
      BackgroundColor #fff
    BorderColor #a0439c
    FontColor #a0439c
    HeaderFontColor #fff
    HeaderBackgroundColor #a0439c
  FontSize 13 
  BorderThickness 1
}

skinparam SequenceBox {
      BackgroundColor #FFFCFF
    BorderColor #a0439c
    FontColor #a0439c
  FontSize 13 
}






skinparam Agent {
      BackgroundColor #1168bd
    BorderColor #fff
    FontColor fff
    StereotypeFontColor fff
    HeaderBackgroundColor fff
  FontSize 13 
}

skinparam Person {
      BackgroundColor #08427b
    BorderColor #fff
    FontColor fff
    StereotypeFontColor fff
    HeaderBackgroundColor fff
  FontSize 13 
}

skinparam Artifact {
      BackgroundColor #1168bd
    BorderColor #fff
    FontColor fff
    StereotypeFontColor fff
    HeaderBackgroundColor fff
  FontSize 13 
}

skinparam Component {
      BackgroundColor #1168bd
    BorderColor #fff
    FontColor fff
    StereotypeFontColor fff
    HeaderBackgroundColor fff
  FontSize 13 
}

skinparam File {
      BackgroundColor #1168bd
    BorderColor #fff
    FontColor fff
    StereotypeFontColor fff
    HeaderBackgroundColor fff
  FontSize 13 
}

skinparam Card {
      BackgroundColor #1168bd
    BorderColor #fff
    FontColor fff
    StereotypeFontColor fff
    HeaderBackgroundColor fff
  FontSize 13 
}

skinparam Storage {
      BackgroundColor #1168bd
    BorderColor #fff
    FontColor fff
    StereotypeFontColor fff
    HeaderBackgroundColor fff
  FontSize 13 
}

skinparam Cloud {
      BackgroundColor #FFFCFF
    BorderColor #a0439c
    FontColor #a0439c
  FontSize 13 
}

skinparam Frame {
      BackgroundColor #FFFCFF
    BorderColor #a0439c
    FontColor #a0439c
  FontSize 13 
}

skinparam Node {
      BackgroundColor #FFFCFF
    BorderColor #a0439c
    FontColor #a0439c
  FontSize 13 
}

skinparam Stack {
      BackgroundColor #1168bd
    BorderColor #fff
    FontColor fff
    StereotypeFontColor fff
    HeaderBackgroundColor fff
  FontSize 13 
}

skinparam Folder {
      BackgroundColor #FFFCFF
    BorderColor #a0439c
    FontColor #a0439c
  FontSize 13 
}

skinparam Hexagon {
      BackgroundColor #e18114
    BorderColor #e18114
    FontColor #fff
    StereotypeFontColor #fff
    HeaderBackgroundColor #fff
  FontSize 13 
}

skinparam Interface {
      BackgroundColor #e18114
    BorderColor #e18114
    FontColor #e18114
    StereotypeFontColor #e18114
  FontSize 13 
}

skinparam Object {
      BackgroundColor #1168bd
    BorderColor #fff
    FontColor fff
    StereotypeFontColor fff
    HeaderBackgroundColor fff
  FontSize 13 
}

skinparam Rectangle {
      BackgroundColor #e18114
    BorderColor #e18114
    FontColor #fff
    StereotypeFontColor #fff
    HeaderBackgroundColor #fff
  FontSize 13 
}

skinparam Rectangle<<boundary>> {
      BackgroundColor #fff
    BorderColor #e18114
    FontColor #e18114
    HeaderFontColor #fff
    HeaderBackgroundColor #e18114
  FontSize 13 
}

skinparam State {
      BackgroundColor #1168bd
    BorderColor #fff
    FontColor fff
    StereotypeFontColor fff
    HeaderBackgroundColor fff
  FontSize 13 
}

skinparam participant<<node_1>> {
      BackgroundColor #08427b
    BorderColor #fff
    FontColor fff
    StereotypeFontColor fff
    HeaderBackgroundColor fff
  FontSize 13 
}
skinparam participant<<node_2>> {
      BackgroundColor #1168bd
    BorderColor #fff
    FontColor fff
    StereotypeFontColor fff
    HeaderBackgroundColor fff
  FontSize 13 
}
skinparam participant<<logic>> {
      BackgroundColor #e18114
    BorderColor #e18114
    FontColor #fff
    StereotypeFontColor #fff
    HeaderBackgroundColor #fff
  FontSize 13 
}
skinparam participant<<group>> {
      BackgroundColor #a0439c
    BorderColor #a0439c
    FontColor #fff
    StereotypeFontColor #fff
    HeaderBackgroundColor #fff
  FontSize 13 
}
skinparam participant<<divider>> {
      BackgroundColor #41af46
    BorderColor #41af46
    FontColor #fff
    StereotypeFontColor #fff
    HeaderBackgroundColor #fff
  FontSize 13 
}
skinparam participant<<note>> {
      BackgroundColor #999
    BorderColor #fff
    FontColor fff
    StereotypeFontColor fff
    HeaderBackgroundColor fff
  FontSize 13 
}

hide footbox

participant "Primary node" <<node 1>>
participant "Secondary node" <<node 2>>
participant "Logic element" <<logic>>
participant "Grouping element" <<group>>
participant "Divider element" <<divider>>
participant "Note" <<note>>

"Primary node" -> "Note" : messages and flows
@enduml

PlantUML version 1.2022.12(Sun Oct 23 18:12:26 GMT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>