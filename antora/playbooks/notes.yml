# Antora playbook for public docs website

site:
  title: Notes
  url: https://notes.drostan.org
  start_page: overview::index.adoc

# Run `git worktree add build/site site` to check out the Github Pages branch here:
output:
  dir: build/site

content:
  sources:
  - url: ./../..
    branches: main
    start_paths:
    - docs/overview
    - docs/documentation_system
    - docs/software_development

  - url: https://github.com/rolfkleef/drostan-styleguide.git
    branches: main
    start_paths:
    - docs
    - lib/antora

runtime:
  fetch: true

# tag::ui[]
ui:
  bundle:
    url: https://github.com/rolfkleef/drostan-antora-ui/releases/download/drostan-antora-ui/ui-bundle.zip
    snapshot: true
  supplemental_files: antora/supplemental-ui
# end::ui[]

antora:
  extensions:
    - require: '@antora/lunr-extension'
  
# tag::asciidoc[]
asciidoc:
  extensions:
  - asciidoctor-kroki # <1>
  - '@djencks/asciidoctor-mathjax' # <2>

  attributes:
    page-pagination: true
    hide-uri-scheme@: true # <3>
    kroki-fetch-diagram: true # <4>
    allow-uri-read: true
    experimental: true
    kroki-default-format@: svg
    kroki-server-url: http://kroki:8000 # <5>
    kroki-plantuml-include: styleguide/plantuml/styling.cfg # <6>
# end::asciidoc[]
    _yamldoc: >
      tag::asciidoc-notes[]
      <1> Use kroki to generate diagram images
      <2> Use MathJax to generate inline SVGs for STEM content
      <3> Don't show https:// etc on bare links
      <4> For kroki: store the image. This requires `allow-uri-read`, as well as `experimental` (to override kroki security)
      <5> Uses a local kroki server via docker bridge network and service declaration in Github Actions
      <6> Include a local PlantUML styling configuration at the start of each diagram
      end::asciidoc-notes[]
